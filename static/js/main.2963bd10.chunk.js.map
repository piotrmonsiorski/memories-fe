{"version":3,"sources":["api/index.js","redux/actions/index.js","redux/actions/posts.js","components/Posts/Post/styles.js","components/Posts/Post/index.js","components/Posts/Post/Post.js","components/Posts/styles.js","components/Posts/index.js","components/Posts/Posts.js","components/Form/styles.js","components/Form/index.js","components/Form/Form.js","images/memories.png","styles.js","App.js","redux/reducers/posts.js","redux/reducers/index.js","index.js"],"names":["url","updatePost","id","post","axios","patch","deletePost","delete","actionTypes","dispatch","a","api","data","type","payload","console","log","makeStyles","media","height","paddingTop","backgroundColor","backgroundBlendMode","border","fullHeightCard","card","display","flexDirection","justifyContent","borderRadius","position","overlay","top","left","color","overlay2","right","grid","details","margin","title","padding","cardActions","tag","textTransform","fontSize","Post","setEditedPost","classes","useStyles","useDispatch","Card","className","CardMedia","image","selectedFile","Typography","variant","creator","moment","createdAt","fromNow","Button","style","size","onClick","_id","MoreHoriz","tags","map","gutterBottom","CardContent","message","component","CardActions","likeCount","ThumbUpAlt","Delete","theme","mainContainer","alignItems","smMargin","spacing","actionDiv","textAlign","Posts","posts","useSelector","state","length","Grid","container","item","xs","sm","CircularProgress","root","paper","form","flexWrap","fileInput","width","buttonSubmit","marginBottom","Form","editedPost","emptyPost","useState","postData","setPostData","setPost","key","value","find","useEffect","clearForm","Paper","autoComplete","noValidate","join","onSubmit","e","preventDefault","newPost","createPost","TextField","name","label","fullWidth","onChange","target","split","multiple","onDone","base64","appBar","heading","marginLeft","App","get","Container","maxwidth","AppBar","align","src","memoriesUrl","alt","Grow","in","justify","initialState","postsReducer","action","filter","combineReducers","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2963bd10.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst url = 'https://memories-project-pm.herokuapp.com/posts';\r\n\r\nexport const fetchPosts = () => axios.get(url);\r\nexport const createPost = newPost => axios.post(url, newPost);\r\nexport const updatePost = (id, post) => axios.patch(`${url}/${id}`, post);\r\nexport const deletePost = id => axios.delete(`${url}/${id}`);\r\n","export const actionTypes = {\r\n  FETCH_ALL: 'FETCH_ALL',\r\n  CREATE: 'CREATE',\r\n  UPDATE: 'UPDATE',\r\n  DELETE: 'DELETE',\r\n};\r\n","import * as api from 'api';\r\nimport { actionTypes } from './';\r\n\r\nexport const getPosts = () => async dispatch => {\r\n  try {\r\n    const { data } = await api.fetchPosts();\r\n    dispatch({\r\n      type: actionTypes.FETCH_ALL,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const createPost = post => async dispatch => {\r\n  try {\r\n    const { data } = await api.createPost(post);\r\n    dispatch({\r\n      type: actionTypes.CREATE,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const updatePost = (id, post) => async dispatch => {\r\n  try {\r\n    const { data } = await api.updatePost(id, post);\r\n    dispatch({\r\n      type: actionTypes.UPDATE,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const deletePost = id => async dispatch => {\r\n  try {\r\n    await api.deletePost(id);\r\n    dispatch({\r\n      type: actionTypes.DELETE,\r\n      payload: id,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    backgroundBlendMode: 'darken',\r\n  },\r\n  border: {\r\n    border: 'solid',\r\n  },\r\n  fullHeightCard: {\r\n    height: '100%',\r\n  },\r\n  card: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n    borderRadius: '15px',\r\n    height: '100%',\r\n    position: 'relative',\r\n  },\r\n  overlay: {\r\n    position: 'absolute',\r\n    top: '20px',\r\n    left: '20px',\r\n    color: 'white',\r\n  },\r\n  overlay2: {\r\n    position: 'absolute',\r\n    top: '20px',\r\n    right: '20px',\r\n    color: 'white',\r\n  },\r\n  grid: {\r\n    display: 'flex',\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n    margin: '20px',\r\n  },\r\n  title: {\r\n    padding: '0 16px',\r\n  },\r\n  cardActions: {\r\n    padding: '0 16px 8px 16px',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  tag: {\r\n    textTransform: 'uppercase',\r\n    fontSize: '11px',\r\n    borderRadius: '4px',\r\n    backgroundColor: 'rgb(220,220,220)',\r\n    padding: '2px 6px',\r\n    margin: '2px',\r\n  },\r\n});\r\n","import Post from './Post';\r\nexport default Post;\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Button,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport {\r\n  ThumbUpAlt as ThumbUpAltIcon,\r\n  Delete as DeleteIcon,\r\n  MoreHoriz as MoreHorizIcon,\r\n} from '@material-ui/icons';\r\nimport { deletePost, updatePost } from 'redux/actions/posts';\r\nimport useStyles from './styles';\r\n\r\nconst Post = ({ post, setEditedPost }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLike = () => {\r\n    dispatch(updatePost(post._id, { ...post, likeCount: post.likeCount + 1 }));\r\n  };\r\n  const handleDelete = () => {\r\n    dispatch(deletePost(post._id));\r\n  };\r\n  const handleEdit = () => {\r\n    setEditedPost(post._id);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={post.selectedFile || ' '}\r\n        title={post.title}\r\n      />\r\n      <div className={classes.overlay}>\r\n        <Typography variant=\"h6\">{post.creator}</Typography>\r\n        <Typography variant=\"body2\">\r\n          {moment(post.createdAt).fromNow()}\r\n        </Typography>\r\n      </div>\r\n      <div className={classes.overlay2}>\r\n        <Button style={{ color: 'white' }} size=\"small\" onClick={handleEdit}>\r\n          <MoreHorizIcon fontSize=\"default\" />{' '}\r\n        </Button>\r\n      </div>\r\n      <div className={classes.details}>\r\n        <Typography variant=\"body2\" color=\"textSecondary\">\r\n          {post.tags.map(tag => (\r\n            <span key={tag} className={classes.tag}>\r\n              #{tag}\r\n            </span>\r\n          ))}\r\n        </Typography>\r\n        <Typography className={classes.title} variant=\"h5\" gutterBottom>\r\n          {post.title}\r\n        </Typography>\r\n        <CardContent>\r\n          <Typography\r\n            className={classes.message}\r\n            variant=\"body2\"\r\n            color=\"textSecondary\"\r\n            component=\"p\"\r\n          >\r\n            {post.message}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions className={classes.cardActions}>\r\n          <Button size=\"small\" color=\"primary\" onClick={handleLike}>\r\n            <ThumbUpAltIcon fontSize=\"small\" />\r\n            Like {post.likeCount}\r\n          </Button>\r\n          <Button size=\"small\" color=\"primary\" onClick={handleDelete}>\r\n            <DeleteIcon fontSize=\"small\" />\r\n            Delete\r\n          </Button>\r\n        </CardActions>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nPost.propTypes = {};\r\n\r\nexport default Post;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles(theme => ({\r\n  mainContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  smMargin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  actionDiv: {\r\n    textAlign: 'center',\r\n  },\r\n}));\r\n","import Posts from './Posts';\r\nexport default Posts;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Grid, CircularProgress } from '@material-ui/core';\r\nimport Post from './Post';\r\nimport useStyles from './styles';\r\n\r\nconst Posts = ({ setEditedPost }) => {\r\n  const classes = useStyles();\r\n  const posts = useSelector(state => state.posts);\r\n\r\n  return !posts.length ? (\r\n    <CircularProgress />\r\n  ) : (\r\n    <Grid\r\n      className={classes.container}\r\n      container\r\n      alignItems=\"stretch\"\r\n      spacing={3}\r\n    >\r\n      {posts.map(post => (\r\n        <Grid key={post._id} item xs={12} sm={6}>\r\n          <Post post={post} setEditedPost={setEditedPost} />\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nPosts.propTypes = {};\r\n\r\nexport default Posts;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles(theme => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n  },\r\n  fileInput: {\r\n    width: '97%',\r\n    margin: '10px 0',\r\n  },\r\n  buttonSubmit: {\r\n    marginBottom: 10,\r\n  },\r\n}));\r\n","import Form from './Form';\r\nexport default Form;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\r\nimport FileBase from 'react-file-base64';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createPost, updatePost } from 'redux/actions/posts';\r\nimport useStyles from './styles';\r\n\r\nconst Form = ({ editedPost, setEditedPost }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const emptyPost = {\r\n    title: '',\r\n    message: '',\r\n    creator: '',\r\n    tags: [''],\r\n    selectedFile: '',\r\n  };\r\n  const [postData, setPostData] = useState(emptyPost);\r\n  const setPost = (key, value) => {\r\n    setPostData({ ...postData, [key]: value });\r\n  };\r\n\r\n  const post = useSelector(state =>\r\n    state.posts.find(post => post._id === editedPost)\r\n  );\r\n  useEffect(() => {\r\n    if (post) setPostData(post);\r\n  }, [post]);\r\n\r\n  const clearForm = () => {\r\n    setEditedPost(null);\r\n    setPostData(emptyPost);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (editedPost) {\r\n      dispatch(updatePost(editedPost, postData));\r\n    } else {\r\n      console.log('postData: ', postData);\r\n      dispatch(createPost(postData));\r\n    }\r\n    clearForm();\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n        className={[classes.form, classes.root].join(' ')}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <Typography variant=\"h6\">\r\n          {editedPost ? 'Editing' : 'Creating'} a memory\r\n        </Typography>\r\n        <TextField\r\n          name=\"creator\"\r\n          variant=\"outlined\"\r\n          label=\"Creator\"\r\n          fullWidth\r\n          value={postData.creator}\r\n          onChange={e => setPost('creator', e.target.value)}\r\n        />\r\n        <TextField\r\n          name=\"title\"\r\n          variant=\"outlined\"\r\n          label=\"Title\"\r\n          fullWidth\r\n          value={postData.title}\r\n          onChange={e => setPost('title', e.target.value)}\r\n        />\r\n        <TextField\r\n          name=\"message\"\r\n          variant=\"outlined\"\r\n          label=\"Message\"\r\n          fullWidth\r\n          value={postData.message}\r\n          onChange={e => setPost('message', e.target.value)}\r\n        />\r\n        <TextField\r\n          name=\"tags\"\r\n          variant=\"outlined\"\r\n          label=\"Tags\"\r\n          fullWidth\r\n          value={postData.tags}\r\n          onChange={e => setPost('tags', e.target.value.split(','))}\r\n        />\r\n        <div className={classes.fileInput}>\r\n          <FileBase\r\n            type=\"file\"\r\n            multiple={false}\r\n            onDone={({ base64 }) => setPost('selectedFile', base64)}\r\n          />\r\n        </div>\r\n        <Button\r\n          className={classes.buttonSubmit}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"large\"\r\n          type=\"submit\"\r\n          fullWidth\r\n        >\r\n          Submit\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          size=\"small\"\r\n          onClick={clearForm}\r\n          fullWidth\r\n        >\r\n          Clear\r\n        </Button>\r\n      </form>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nForm.propTypes = {};\r\n\r\nexport default Form;\r\n","export default __webpack_public_path__ + \"static/media/memories.9cfa8a46.png\";","import { makeStyles } from '@material-ui/core';\r\n\r\nexport default makeStyles(() => ({\r\n  appBar: {\r\n    borderRadius: 15,\r\n    margin: '30px 0',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  heading: {\r\n    color: 'rgba(0,183,255, 1)',\r\n  },\r\n  image: {\r\n    marginLeft: '15px',\r\n  },\r\n}));\r\n","import React, { useState, useEffect } from 'react';\nimport { Container, AppBar, Typography, Grow, Grid } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { getPosts } from 'redux/actions/posts';\nimport Posts from 'components/Posts';\nimport Form from 'components/Form';\nimport memoriesUrl from 'images/memories.png';\nimport useStyles from './styles';\n\nconst App = () => {\n  const classes = useStyles();\n  const [editedPost, setEditedPost] = useState(null);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getPosts());\n  }, [editedPost, dispatch]);\n\n  return (\n    <Container maxwidth=\"lg\">\n      <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\n        <Typography className={classes.heading} variant=\"h2\" align=\"center\">\n          Memories\n        </Typography>\n        <img\n          className={classes.heading}\n          src={memoriesUrl}\n          alt=\"memories\"\n          height=\"60\"\n        />\n      </AppBar>\n      <Grow in>\n        <Container>\n          <Grid\n            container\n            justify=\"space-between\"\n            alignItems=\"stretch\"\n            spacing={3}\n          >\n            <Grid item xs={12} sm={7}>\n              <Posts setEditedPost={setEditedPost} />\n            </Grid>\n            <Grid item xs={12} sm={4}>\n              <Form editedPost={editedPost} setEditedPost={setEditedPost} />\n            </Grid>\n          </Grid>\n        </Container>\n      </Grow>\n    </Container>\n  );\n};\n\nexport default App;\n","import { actionTypes } from '../actions';\r\n\r\nconst initialState = [];\r\n\r\nconst postsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.FETCH_ALL:\r\n      return action.payload;\r\n    case actionTypes.CREATE:\r\n      return [...state, action.payload];\r\n    case actionTypes.UPDATE:\r\n      return state.map(post =>\r\n        post._id === action.payload._id ? action.payload : post\r\n      );\r\n    case actionTypes.DELETE:\r\n      return state.filter(post => post._id !== action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default postsReducer;\r\n","import { combineReducers } from 'redux';\r\nimport posts from './posts';\r\n\r\nexport default combineReducers({\r\n  posts,\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport App from './App';\r\nimport reducers from './redux/reducers';\r\n\r\nimport './index.css';\r\n\r\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}